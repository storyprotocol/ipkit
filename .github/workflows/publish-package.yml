name: publish on github on npm

on:
  workflow_dispatch:
    inputs:
      patch_desc:
        description: 'Description of change'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  Timestamp:
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-timestamp.yml@main
  
  fetch_latest_version:
    needs: [Timestamp]
    runs-on: ubuntu-latest
    outputs:
      LATEST_VERSION: ${{ steps.get_latest_version.outputs.LATEST_VERSION }}
    steps:
      - name: Get latest package version
        id: get_latest_version
        run: |
          LATEST_VERSION=$(npm view @story-protocol/storykit version)
          echo "Latest version of @story-protocol/storykit on NPMJS is $LATEST_VERSION"
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_OUTPUT

  print_version_to_publish:
    needs: [Timestamp, fetch_latest_version]
    runs-on: ubuntu-latest
    outputs:
      version_to_be_published: ${{ steps.get_version_to_publish.outputs.VERSION_TO_BE_PUBLISHED }}
    steps:
      - name: Get version to publish
        id: get_version_to_publish
        run: |
          LAST_PATCH=${{needs.fetch_latest_version.outputs.LATEST_VERSION}}
          IFS='.' read -r major minor patch <<< "$LAST_PATCH"
          major=$((major))
          minor=$((minor))
          patch=$((patch))
          case ${{github.event.inputs.patch_desc}} in
            "major")
              ((major += 1))
              ;;
            "minor")
              ((minor += 1))
              ;;
            "patch")
              ((patch += 1))
              ;;
            *)
              echo "Unknown Patch"
              ;;
          esac
          echo "VERSION_TO_BE_PUBLISHED= $major.$minor.$patch" >> $GITHUB_OUTPUT

  publish-gpr:
    needs: [print_version_to_publish, fetch_latest_version]
    if: needs.fetch_latest_version.outputs.LATEST_VERSION != needs.print_version_to_publish.outputs.version_to_be_published
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 8.8.0

      - uses: actions/setup-node@v1
        with:
          node-version: 20.0.0
          cache: pnpm
          registry-url: https://npm.pkg.github.com/
          scope: "@storyprotocol"

      - name: Install dependencies
        run: pnpm install

      - name: Test
        run: pnpm test
        
      - name: Build
        run: pnpm build

      - name: Publish to npm
        run: |
          cd packages/storykit
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
